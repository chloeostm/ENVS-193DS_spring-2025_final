---
title: "ENVS 139DS Final"
author: "Chloe Ostermann"
date: "2025-06-8"
format: 
  html: 
    toc: true
    toc-float: true
    toc-location: left
---

GitHub link: https://github.com/chloeostm/ENVS-193DS_spring-2025_final.git

```{r libraries}
#| message: false
# Read in packages
library(tidyverse)
library(janitor)
library(here)
library(dplyr)
library(tibble)
library(gt)
library(readxl)
library(ggeffects)
library(MuMIn) 
library(DHARMa)
```

# Problem 1. Research Writing

## a.

In part 1, they used Pearson's correlation. In part 2 they used an ANOVA test.

## b.

To improve their data communication, my co-worker could include an effect size statistic to communicate how large the calculated differences are between groups. For instance, they could determine how large the difference in means of nitrogen load is between sources which adds valuable insight on the significance of the results. Additionally, they could include a Post-hoc pairwise comparison such as a Tukey's HSD comparison to improve how they communicated the results of the ANOVA test. This would help determine which specific group differs from the others. For instance, whether the average nitrogen load in waste water treatment differs significantly from fertilizer treatment.

## c.

Using a Pearson's correlation test, we found that there is a significant correlation between distance from head water(km) and annual nitrogen load (kg year-1) (Pearson's correlation. r = Correlation coefficient, p = 0.03, $/alpha$ = significance level). We then performed an ANOVA test and determined that there is a significant difference in average nitrogen load (kg year-1) between water sources (urban land, atmospheric deposition, fertilizer, waste water treatment, and grasslands) (One-Way ANOVA. F(F = F value), df = degrees of freedom, p = 0.02, $\alpha$ = significance level).

# Problem 2. Data Visualization

## a.

```{r}

sst <- read_csv(here("data","SST_update2023.csv")) # read in data from data folder using here()
sst_clean <- sst %>% # use raw sst data
  clean_names() # clean names of data so there's no spaces between words

sst_clean$year <- as.numeric( # converts year into a numeric value
  format(as.Date(sst_clean$date), "%Y")) # extracts year from date and makes it a Date object
sst_clean$year <- factor(sst_clean$year, levels = 2018:2023) # make year a factor with 6 levels
sst_clean$month <- as.numeric(format(as.Date(sst_clean$date), "%m")) # extract month
sst_clean$month <- factor(sst_clean$month,levels = 1:12, # factorize month with 12 levels
                          labels = month.abb,ordered = TRUE) # abbreviate and order months
sst_clean$date <- NULL # remove date column
sst_clean <- sst_clean %>% # altering sst-clean data
  filter(!is.na(year)) # remove rows where year shows NA

sst_clean_summary <- sst_clean %>% # summarizing sst_clean data
  group_by(year, month) %>% # grouping by year and month
  summarise(
    mean_monthly_sst = round(mean(temp, na.rm = TRUE),1), # calculate mean temperature and round to nearest tenth
    .groups = "drop" # un-groups tibble
  )
str(sst_clean_summary) # show structure of sst_clean_summary
sst_clean_summary %>% # use sst_clean_summary data
  slice_sample(n = 5) # display tibble with 5 random rows

```

## b.

```{r}

#| warning: false

#create custom colors to define a green color gradient in the correct order
green_shades <- c("2018" = "#c3f6c3", "2019" = "#a1d99b", 
                  "2020" = "#74c476", "2021" = "#31a354", 
                  "2022" = "#006d2c", "2023" = "#00441b") 

ggplot(data = sst_clean_summary, # create table from sst_clean_summary data
       aes(x = month, # set x axis data
           y = mean_monthly_sst, # set y axis data
           color = year)) + # show different colors for different years
  geom_point() + # create points for each data point
  geom_line(aes(group = year)) + # create lines connecting data points from each year
  scale_y_continuous( 
    breaks = seq(14, 20, by = 2), # Ensure 20 is included as top tick
    limits = c(12, 20), # Set axis limits to cap at 20
    expand = expansion(mult = c(0, 0)) # Prevent extra padding
  ) +
  
  scale_color_manual(values = green_shades) +
  labs(title = "Sea Surface Temperature in SB channel", # set title
       x = "Month", # name x axis
       y = "Mean monthly sea surface temperature (ºC)", # name y axis
       color = "Year") + # name legend "water year"
  
  theme(
    panel.grid = element_blank(), # remove grid
    panel.background = element_rect(fill = "white", color = NA), 
    # color background white
    plot.background = element_rect(fill = "white", color = NA), 
    # color plot white
    panel.border = element_rect(color = "darkgrey", fill = NA, size = 1),
    legend.position = c(0.10, 0.70), # position legend inside the panel
    plot.title = element_text(hjust = -0.1) # move the title
)
```

#Problem 3. Data Analysis

```{r}

nest_boxes <- read.csv(here("data","occdist.csv")) # read in data
nest_boxes_clean <- nest_boxes %>% 
  clean_names() # clean the data

```

## a.

In this data set, a 1 indicates that the associated bird species was present in the nest box. A 0 indicates that the nest box was unoccupied by that bird species.

## b.

In this experiment, the difference between these birds is that Swift Parrots are the target critically endangered bird species, whereas the Common Starlings and Tree Martins are non target native competitors to the Swift Parrots and have been recorded to inhabit the nest boxes intended for the Swift Parrots.

## c.

The authors refer to two "seasons" which are two different years of study, 2016 and 2019, in which they recorded during the breeding season of the Swift Parrot species. The difference between these seasons is that the nest boxes were more established and familiar to the target and non-target species in 2019 compared to 2016 when they were freshly deployed resulting in stronger nest to bird relationships in 2019.

## d.

| Model number | Season | Forest Edge Distance | Model Description |
|:----------------:|:----------------:|:----------------:|-------------------|
| 1 |  |  | No predictors (null model) |
| 2 | X | X | All predictors (full model) |
| 3 | X |  | Only Season predictor |
| 4 |  | X | Only Distance from Forest Edge predictor |

## e.

```{r}

# model 1: null model
model1 <- lm(
  sp ~ 1, # formula
  data = nest_boxes_clean # data frame
)

# model 2: all predictors
model2 <- lm(
  sp ~ season + edge_distance, # formula
  data = nest_boxes_clean # data frame
)

# model 3: season
model3 <- lm(
  sp ~ season, # formula
  data = nest_boxes_clean # data frame
)

# model 4: edge_distance
model4 <- lm(
  sp ~ edge_distance, # formula
  data = nest_boxes_clean # data frame
)

```

## f.

```{r}

plot(simulateResiduals(model1)) # plot model using DHARMa residual
plot(simulateResiduals(model2))
plot(simulateResiduals(model3))
plot(simulateResiduals(model4))

```

## g.

```{r}

model_compare <- AIC(model1, model2, model3, model4)
model_compare <- model_compare[order(model_compare$AIC), ]
print(model_compare)

```

The best model as determined by Akaike’s Information Criterion (AIC) that predicts Swift Parrot nest box occupancy includes season and edge distance. (model 2)

## h.

```{r model-predictions}
#| warning: false
model2_preds <- ggpredict( # use ggpredict to create a model prediction
  model2, # model object
  terms = c("edge_distance [all]", "season") # predictors used as terms in the model prediction
) %>% 
  rename(season = group, # rename the columns
         edge_distance = x) # rename x column to be "edge_distance"

nest_boxes_clean$season <- as.factor(nest_boxes_clean$season) # make seasons a factor

ggplot() + # create a plot 
  geom_point(data = nest_boxes_clean, # create data points 
       aes(x = edge_distance, # use edge_distance as variable for x axis
           y = as.numeric(sp), # use sp as variable for y axis
           color = season), # color each season
       size = 2.5, # set point size
       alpha = 0.4, # set point transparency
       position = position_jitter(height = 0.05)) + # set jitter height spread
  geom_ribbon(data = model2_preds, # create a ribbon for data visualization
              aes(x = edge_distance, # set edge_distance as x variable
                  ymin = conf.low, # set y-min as conf.low
                  ymax = conf.high, # set y-max as conf.high
                  fill = season), # season variable sets fill color
              alpha = 0.3) + # set transparency
  geom_line(data = model2_preds, # create line from our model predictions
            aes(x = edge_distance, # set edge_distance as x variable
                y = predicted, # set predicted as y axis variable
                color = season), # season variable sets line color
            linewidth = 1) + # set line width
  scale_y_continuous("Swift Parrot Occupancy: Yes (1) or No (0)", # set y axis title
                     limits = c(0, 1), # set y axis limits
                     breaks = seq(0, 1)) + # set tick marks only at 0 and 1
  scale_color_manual(name = "Season", # create manual colors for points for each season
                     values = c("2016" = "skyblue",   # set color value for 2016
                                "2019" = "darkgreen")) +  # set color value for 2019
  scale_fill_manual(name = "Season", # create manual colors for ribbon for each season
                     values = c("2016" = "lightblue",   # set color value for 2016
                                "2019" = "lightgreen")) + # set color value for 2016
  labs(x = "Distance from Forest Edge (m)") + # label x axis
  theme_minimal(base_size = 13) + # use minimal theme and set default text size
  theme(
    panel.grid.major = element_blank(),  # removes major gridlines
    panel.grid.minor = element_blank(),   # removes minor gridlines
    panel.border = element_rect(color = "darkgrey", fill = NA, size = 1) # keep panel border
)

```

## i.

**Figure 3. Swift Parrot Nest Occupancy by Distance from Forest Edge(m).** This figure displays observations of the endangered Swift parrot bird in box nests (0 = nest not occupied, 1 = nest occupied) plotted against the nests distance from the forest edge (m) depending on season. The points designating how far the nest was and whether it was occupied are jittered for visibility. The different colors are used to separate points on the "season" or year they were recorded in: 2016 or 2019. The shaded ribbons represent 95% confidence intervals calculated using a full model prediction that predicts occupancy probability across the range of distances. Data source: Stojanovic, D. et al. (2020) *Do nest boxes breed the target species or its competitors? A case study of a critically endangered bird* Ecology, 29(3)

## j.

```{r}

predictions <- ggpredict(
  model2, # model2 used to make predictions from
  terms = c("edge_distance [0,900]", "season") # set terms so that predictions are made for edge distances 0 and 900 for each season
)

print(predictions) # view predictions

```

The predicted probability (at 95% confidence) of Swift Parrot occupancy in 2016 at 0m from the Forest edge is 43% and at 900m it is 13%. The predicted probability (at 95% confidence) of Swift Parrot occupancy in 2019 at 0m from the Forest edge is 30% and at 900m it is 1%.

## k.

In this experiment, we compiled observations of Swift Parrots occupying box nests at various distances from the Forest Edge during two breeding seasons: 2016 and 2019. After testing various models to best represent our data, the best model as determined by Akaike’s Information Criterion (AIC) was a full model where we used all predictors, the season and the distance from the Forest Edge, to explain why we might see certain trends in nest occupancy. In figure 3, (problem 3.h.) we created a plot comparing our variables (Distance from Forest Edge, Season, and Swift Parrot occupancy) showing model predictions with 95% confidence intervals which showed that Swift Parrot occupancy overall tended to decrease in 2019 compared to 2016, and as nest boxes are set further from the Forest Edge. In 2016 the probability of a nest being occupied was 43% when it was 0m from the forest and 13% when 900m from the forest compared to 2016 which saw a probability of 30% when the nest was 0m from the forest and 1% when it was 900m from the forest. From these results, we can interpret that the endangered Swift parrot has been increasingly vulnerable to competition from other native bird species, such as Common Starlings and tree Martins, and has been less likely to occupy established nests in 2019 and nests that are further from the Forests Edge.

# Problem 4. Affective and exploratory Visualization

## a.

These two visualizations differ since the affective visualization heavily leans on artistic elements and creativity to share data whereas the exploratory visualizations I made for Homework 2 were designed to explicitly share the quantitative data in a simple and straightforward graph without any artistic embellishments.

One similarity that I see is that in both visualizations I opted to communicate the actual data using box plots. I also separated each of the variables in my exploratory visualizations using distinct colors which I also did for my affective one.

I found different patterns in my data for both visualizations mainly because I had collected much more data points by the time I made the affective visualization which resulted in different trends and patterns. For instance, my exploratory visualizations suggested that I slept more on average on days where I took the bus instead of walking, whereas my affective visualization indicated that I slept the most on days where I walked. The range of my data boxplots was also larger for my affective visualization since it had more data and thus a broader range since it had more outliers recorded.

During our Week 9 workshop, I received positive feedback on my drawing design and choice of colors. My classmates suggested that I incorporate more elements alluding to the sleep variable I was using in my data, which I integrated into my design by making my little sleeping figurines in the box plots larger and gave them elements such as a pillow and a sleeping mask.
